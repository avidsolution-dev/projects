
//deploy-app/index.js

        app.use("/xxx", function(req, res){
            var body = '<html><body>'
                + '<div style="color:Red;font-size:24px;float:left">Test Title</div><span>&nbsp;</span><div style="float:left;padding-left: 20px">'
                + '<button type="button" title="Books3" ' +
                'onclick="var div=document.getElementById(\'calc\'); if(div.style.display==\'none\') {div.style.display=\'block\'} else {div.style.display=\'none\'}">' +
                'Book3</button></div>' +
                '<div id="testDiv" style="position:absolute;width:100px;height:100px;z-index:100;border: solid;display:none;background-color: Red"></div>' +
                '<div id="calc" width="400px" heigh="500px" style="z-index:1;display:none"> <iframe src="http://leshchenya:8000/4q3vsh2g2jz5" width="100%" height="100%"></iframe> </div>' +

                '<div id="content" style="z-index:1"><iframe src="red/#flow/43e44153.218a3" width="100%" height="100%"></iframe></div>';
                + '<script id="__bs_script__">//<![CDATA['+'\n'+
            'document.write("<script async src=\'http://HOST:4000/browser-sync/browser-sync-client.js?v=2.18.6\'><\/script>".replace("HOST", location.hostname));'+
            +'\n'+'//]]></script>' +
                '</body></html>';
console.log(body);
            res.send(body);
        });



//books.html

    <div id="googleBookWindow" class="modal fade" role="dialog" style="width:1100px;height:700px;top:100px;left:200px">
        <div class="modal-dialog" style="width:1000px;height:600px">

            <iframe src="https://docs.google.com/a/altoros.com/spreadsheets/d/1yc7K8u_SPNsT92e_pLFD43Fs7yV-sIhkzfqASYdpU1Q/edit"
                    width="100%" height="100%">

            </iframe>
        </div>
    </div><!-- /Modal -->







///books.module.js

        /**
         * Check if current user has authorized this application.
         */
        function checkAuth() {
            gapi.auth.authorize(
                {
                    'client_id': CLIENT_ID,
                    'scope': SCOPES.join(' '),
                    'immediate': true
                }, handleAuthResult);
        }

        /**
         * Handle response from authorization server.
         *
         * @param {Object} authResult Authorization result.
         */
        function handleAuthResult(authResult) {
            //var authorizeDiv = document.getElementById('authorize-div');
            if (authResult && !authResult.error) {
                // Hide auth UI, then load client library.
                //authorizeDiv.style.display = 'none';
                loadSheetsApi();
            } else {
                // Show auth UI, allowing the user to initiate authorization by
                // clicking authorize button.
                //authorizeDiv.style.display = 'inline';
            }
        }

        /**
         * Initiate auth flow in response to user clicking authorize button.
         *
         * @param {Event} event Button click event.
         */
        function handleAuthClick() {

            gapi.auth.authorize(
                {client_id: CLIENT_ID, scope: SCOPES, immediate: false},
                handleAuthResult);
            return false;
        }

        /**
         * Load Sheets API client library.
         */
        function loadSheetsApi() {
            var discoveryUrl =
                'https://sheets.googleapis.com/$discovery/rest?version=v4';
            gapi.client.load(discoveryUrl).then(createNew);
        }


        function createNew() {
            $('#googleBookWindow').modal();
/*

            gapi.client.sheets.spreadsheets.create()
            .then(resp=>{
                    console.log("Create response");
                    console.log(resp);
                    $('#googleBookWindow').modal();
                })
*/
        }

        /**
         * Print the names and majors of students in a sample spreadsheet:
         * https://docs.google.com/spreadsheets/d/1BxiMVs0XRA5nFMdKvBdBZjgmUUqptlbs74OgvE2upms/edit
         */
        function listMajors() {
            gapi.client.sheets.spreadsheets.values.get({
                spreadsheetId: '1BxiMVs0XRA5nFMdKvBdBZjgmUUqptlbs74OgvE2upms',
                range: 'Class Data!A2:E',
            }).then(function(response) {
                var range = response.result;
                if (range.values.length > 0) {
                    appendPre('Name, Major:');
                    for (i = 0; i < range.values.length; i++) {
                        var row = range.values[i];
                        // Print columns A and E, which correspond to indices 0 and 4.
                        appendPre(row[0] + ', ' + row[4]);
                    }
                } else {
                    appendPre('No data found.');
                }
            }, function(response) {
                appendPre('Error: ' + response.result.error.message);
            });
        }

        /**
         * Append a pre element to the body containing the given message
         * as its text node.
         *
         * @param {string} message Text to be placed in pre element.
         */
        function appendPre(message) {
            var pre = document.getElementById('output');
            var textContent = document.createTextNode(message + '\n');
            pre.appendChild(textContent);
        }







public/index.html

<script >



    var API_KEY ='AIzaSyBR4nfH8i_WJVFEe1Ocr2Fo7S5-1lzg3js';
    var CLIENT_ID ='870386214332-2v429op3gffguqbqmvpog7omqu90i18g.apps.googleusercontent.com';
    var SCOPES = ["https://www.googleapis.com/auth/spreadsheets"];

    function initClient() {
        gapi.client.init({
            apiKey: API_KEY,
            discoveryDocs: ["https://sheets.googleapis.com/$discovery/rest?version=v4"],
            clientId: CLIENT_ID,
            scope: SCOPES
        }).then(function () {
            // Listen for sign-in state changes.
            gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus);
            // Handle the initial sign-in state.
            updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());
            authorizeButton.onclick = handleAuthClick;
            signoutButton.onclick = handleSignoutClick;
        });
    }

</script>


    <script async defer src="https://apis.google.com/js/api.js"
            onload="this.onload=function(){};gapi.load('client:auth2', initClient);"
            onreadystatechange="if (this.readyState === 'complete') this.onload()">

    </script>



  "engines": {
    "node": "4.6.x"
  },


function changePortToProxyPort(server) {
    console.log("SERVER");
    //console.log(server);
    var websocketPort = process.env.WEBSOCKET_PROXY_PORT;
    if (websocketPort && server) {

        //server.listen(websocketPort)
    //
    }
    console.log("SERVER");
   // console.log(server);
    return server;
}


            console.log("LOCATION");
            //console.log(io);
            var url = "//"+ location.hostname + ":1881" ;
            console.log(url);

            var socket = io(/*url,*/ {path: location.pathname + 'socket.io'});
